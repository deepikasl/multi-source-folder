valuesFilePath: ./values.yml

# Names
{{ $serviceName := .Values.serviceName }}
{{ $buildInfoResultResName := print $serviceName "_build_result" }}
{{ $buildInfoResName := print $serviceName "_build_info" }}

{{ $isControlsAvailable := default false .Values.controls }}
{{ $isSignAvailable := default false (and $isControlsAvailable (eq .Values.controls.sign_release_bundle.enabled true)) }}

# -----------------------------------------------------------------
# Reusable templates
# These are resolved using 'template' thus indentation is important
# -----------------------------------------------------------------
{{ $resultResources := dict "buildInfoResultResName" $buildInfoResultResName }}
{{ $templateParams := merge $resultResources }}


# Steps shared onExecute template
{{ define "step.shared.onExecute.command" }}
  {{ $ := . }}
            {{ if ( and ($.conf) ($.conf.onExecute) ) }}
            {{- range $cmd := $.conf.onExecute }}
            - {{ $cmd }}
            {{- end }}
            {{ else if $.default}}
            - {{ $.default }}
            {{ end }}
{{ end }}

# Steps shared onStart template
{{ define "step.shared.onStart.command" }}
  {{ $ := . }}
            {{ if $.conf }}
            {{- range $cmd := $.conf.onStart }}
            - {{ $cmd }}
            {{- end }}
            {{ end }}
{{ end }}

# Steps shared onSuccess template
{{ define "step.shared.onSuccess.command" }}
  {{ $ := . }}
            {{ if $.conf }}
            {{- range $cmd := $.conf.onSuccess }}
            - {{ $cmd }}
            {{- end }}
            {{ end }}
{{ end }}

# Steps shared onFailure template
{{ define "step.shared.onFailure.command" }}
  {{ $ := . }}
            {{ if $.conf }}
            {{- range $cmd := $.conf.onFailure }}
            - {{ $cmd }}
            {{- end }}
            {{ end }}
{{ end }}

# sign_release_bundle step
{{ define "step.sign_release_bundle.onExecute" }}
  {{ $ := . }}
  {{ $ := set $ "conf" $.values.configurations.steps.sign_release_bundle }}
            - echo "onExecute"
            {{ template "step.shared.onExecute.command" $ }}
{{ end }}

{{ define "step.sign_release_bundle.onStart" }}
  {{ $ := . }}
  {{ $ := set $ "conf" $.values.configurations.steps.sign_release_bundle }}
            - echo "onStart"
            {{ template "step.shared.onStart.command" $ }}
{{ end }}

{{ define "step.sign_release_bundle.onSuccess" }}
  {{ $ := . }}
  {{ $ := set $ "conf" $.values.configurations.steps.sign_release_bundle }}
            - echo "onSuccess"
            {{ template "step.shared.onSuccess.command" $ }}
{{ end }}

{{ define "step.sign_release_bundle.onFailure" }}
  {{ $ := . }}
  {{ $ := set $ "conf" $.values.configurations.steps.sign_release_bundle }}
            - echo "onFailure"
            {{ template "step.shared.onFailure.command" $ }}
{{ end }}

# distribute_to_edge step
{{ define "step.distribute_to_edge.onExecute" }}
  {{ $ := . }}
  {{ $ := set $ "conf" $.values.configurations.steps.distribute_to_edge }}
            - echo "onExecute"
            {{ template "step.shared.onExecute.command" $ }}
{{ end }}

{{ define "step.distribute_to_edge.onStart" }}
  {{ $ := . }}
  {{ $ := set $ "conf" $.values.configurations.steps.distribute_to_edge }}
            - echo "onStart"
            {{ template "step.shared.onStart.command" $ }}
{{ end }}

{{ define "step.distribute_to_edge.onSuccess" }}
  {{ $ := . }}
  {{ $ := set $ "conf" $.values.configurations.steps.distribute_to_edge }}
            - echo "onSuccess"
            {{ template "step.shared.onSuccess.command" $ }}
{{ end }}

{{ define "step.distribute_to_edge.onFailure" }}
  {{ $ := . }}
  {{ $ := set $ "conf" $.values.configurations.steps.distribute_to_edge }}
            - echo "onFailure"
            {{ template "step.shared.onFailure.command" $ }}
{{ end }}

resources:
  - name: build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.inputs.integrations.artifactory }}
      buildName: {{ .Values.inputs.resources.build_info.buildName }}
      buildNumber: {{ .Values.inputs.resources.build_info.buildNumber }}

  - name: release_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: {{ .Values.inputs.integrations.distribution }}
      name: {{ .Values.inputs.resources.release_bundle.name }}
      version: {{ .Values.inputs.resources.release_bundle.version }}

  - name: signed_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: {{ .Values.inputs.integrations.distribution }}
      name: {{ .Values.inputs.resources.signed_bundle.name }}
      version: {{ .Values.inputs.resources.signed_bundle.version }}

  - name: distribution_rules
    type: DistributionRule
    configuration:
      sourceDistribution: {{ .Values.inputs.integrations.distribution }}
      serviceName: "{{ .Values.inputs.resources.distribution_rules.serviceName }}"
      siteName: "{{ .Values.inputs.resources.distribution_rules.siteName }}"
      cityName: "{{ .Values.inputs.resources.distribution_rules.cityName }}"
      countryCodes:
        - "CN"
        - "GB"

pipelines:
  - name: distribute_to_edge
    configuration:
      jfrogCliVersion: 2
    steps:
      - name: create_release_bundle
        type: Bash
        configuration:
          inputResources:
            - name: build_info
          integrations:
            - name: {{ .Values.inputs.integrations.artifactory }}
          outputResources:
            - name: release_bundle
        execution:
          onExecute:
            - echo "create_release_bundle"
            - fileSpecFileName="createReleaseBundlePayload.json"
            - fileSpec='{"files":[]}'
            - aqlTemplate='{"items.find":{}}'
            - aqlTemplate="{\"items.find\":{\"@build.name\":\"$res_build_info_buildName\",\"@build.number\":\"$res_build_info_buildNumber\"}}"
            - buildInfoQuery=$(echo {} | jq --argjson json "$aqlTemplate" '.aql = $json')
            - fileSpec=$(echo $fileSpec | jq --argjson json "$buildInfoQuery" '.files += [ $json ]')
            - echo "$fileSpec"
            - echo "$fileSpec" | jq . > "$step_tmp_dir/$fileSpecFileName"
            - jf ds rbc --builds=$step_tmp_dir/$fileSpecFileName --signing-key=deepika-pipelines-rb deepika_demo_rb 1.0.0

      {{ if $isSignAvailable }}
      - name: sign_release_bundle
        type: Bash
        configuration:
          inputResources:
            - name: release_bundle
          outputResources:
            - name: signed_bundle
        execution:
          {{ if .Values.configurations.steps.sign_release_bundle.onStart }}
          onStart:
            {{ template "step.sign_release_bundle.onStart" $templateParams }}
          {{ end }}
          onExecute:
            {{ template "step.sign_release_bundle.onExecute" $templateParams }}
          {{ if .Values.configurations.steps.sign_release_bundle.onSuccess }}
          onSuccess:
            {{ template "step.sign_release_bundle.onSuccess" $templateParams }}
          {{ end }}
          {{ if .Values.configurations.steps.sign_release_bundle.onFailure }}
          onFailure:
            {{ template "step.sign_release_bundle.onFailure" $templateParams }}
          {{ end }}
      {{ end }}
      - name: distribute_to_edge
        type: Bash
        configuration:
          inputResources:
            {{ if $isSignAvailable }}
            - name: signed_bundle
            {{ else }}
            - name: release_bundle
            {{ end }}
          outputResources:
            - name: distribution_rules
        execution:
          {{ if .Values.configurations.steps.distribute_to_edge.onStart }}
          onStart:
            {{ template "step.distribute_to_edge.onStart" $templateParams }}
          {{ end }}
          onExecute:
            {{ template "step.distribute_to_edge.onExecute" $templateParams }}
          {{ if .Values.configurations.steps.distribute_to_edge.onSuccess }}
          onSuccess:
            {{ template "step.distribute_to_edge.onSuccess" $templateParams }}
          {{ end }}
          {{ if .Values.configurations.steps.distribute_to_edge.onFailure }}
          onFailure:
            {{ template "step.distribute_to_edge.onFailure" $templateParams }}
          {{ end }}
           
