valuesFilePath: ./values.yml
# Steps shared onExecute template
{{ define "step.shared.onExecute.command" }}
  {{ $ := . }}
            {{ if ( and ($.conf) ($.conf.onExecute) ) }}
            {{- range $cmd := $.conf.onExecute }}
            - {{ $cmd }}
            {{- end }}
            {{ else if $.default}}
            - {{ $.default }}
            {{ end }}
{{ end }}

# Steps shared onStart template
{{ define "step.shared.onStart.command" }}
  {{ $ := . }}
            {{ if $.conf }}
            {{- range $cmd := $.conf.onStart }}
            - {{ $cmd }}
            {{- end }}
            {{ end }}
{{ end }}

# Steps shared onSuccess template
{{ define "step.shared.onSuccess.command" }}
  {{ $ := . }}
            {{ if $.conf }}
            {{- range $cmd := $.conf.onSuccess }}
            - {{ $cmd }}
            {{- end }}
            {{ end }}
{{ end }}

# Steps shared onFailure template
{{ define "step.shared.onFailure.command" }}
  {{ $ := . }}
            {{ if $.conf }}
            {{- range $cmd := $.conf.onFailure }}
            - {{ $cmd }}
            {{- end }}
            {{ end }}
{{ end }}
resources:
  - name: build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.inputs.integrations.artifactory }}
      buildName: {{ .Values.inputs.resources.build_info.buildName }}
      buildNumber: {{ .Values.inputs.resources.build_info.buildNumber }}

  - name: release_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: {{ .Values.inputs.integrations.distribution }}
      name: {{ .Values.inputs.resources.release_bundle.name }}
      version: {{ .Values.inputs.resources.release_bundle.version }}

  - name: signed_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: {{ .Values.inputs.integrations.distribution }}
      name: {{ .Values.inputs.resources.signed_bundle.name }}
      version: {{ .Values.inputs.resources.signed_bundle.version }}

  - name: distribution_rules
    type: DistributionRule
    configuration:
      sourceDistribution: {{ .Values.inputs.integrations.distribution }}
      # serviceName: {{ .Values.inputs.resources.distribution_rules.serviceName }}
      serviceName: "*"
      siteName: {{ .Values.inputs.resources.distribution_rules.siteName }}
      cityName: {{ .Values.inputs.resources.distribution_rules.cityName }}
      countryCodes:
        - "CN"
        - "GB"

pipelines:
  - name: distribute_to_edge
    configuration:
      jfrogCliVersion: 2
    steps:
      - name: create_release_bundle
        type: Bash
        configuration:
          inputResources:
            - name: build_info
          integrations:
            - name: {{ .Values.inputs.integrations.artifactory }}
          outputResources:
            - name: release_bundle
        execution:
          onExecute:
            - echo "create_release_bundle"
            - fileSpecFileName="createReleaseBundlePayload.json"
            - fileSpec='{"files":[]}'
            - aqlTemplate='{"items.find":{}}'
            - aqlTemplate="{\"items.find\":{\"@build.name\":\"$res_build_info_buildName\",\"@build.number\":\"$res_build_info_buildNumber\"}}"
            - buildInfoQuery=$(echo {} | jq --argjson json "$aqlTemplate" '.aql = $json')
            - fileSpec=$(echo $fileSpec | jq --argjson json "$buildInfoQuery" '.files += [ $json ]')
            - echo "$fileSpec"
            - echo "$fileSpec" | jq . > "$step_tmp_dir/$fileSpecFileName"
            - jf rbc --builds=$step_tmp_dir/$fileSpecFileName --signing-key=deepika-pipelines-rb deepika_demo_rb 1.0.0

      - name: sign_release_bundle
        type: Bash
        configuration:
          inputResources:
            - name: release_bundle
          outputResources:
            - name: signed_bundle
        execution:
          onExecute:
            - echo "sign_release_bundle"

      - name: distribute_to_edge
        type: Bash
        configuration:
          inputResources:
            - name: signed_bundle
          outputResources:
            - name: distribution_rules
        execution:
          onExecute:
            - echo "distribute_to_edge"
