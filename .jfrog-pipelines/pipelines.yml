valuesFilePath: ./values.yml
resources:
  - name: build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.integrations.artifactoryIntegration }}
      buildName: myApp_build
      buildNumber: 1

  - name: release_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: {{ .Values.integrations.distributionIntegration }}
      name: deepika_demo_rb
      version: v1.0.0

  - name: signed_bundle
    type: ReleaseBundle
    configuration:
      sourceDistribution: {{ .Values.integrations.distributionIntegration }}
      name: deepika_demo_rb
      version: v1.0.0

  - name: distribution_rules
    type: DistributionRule
    configuration:
      sourceDistribution: {{ .Values.integrations.distributionIntegration }}
      serviceName: "*"
      siteName: "*"
      cityName: "*"
      countryCodes:
        - "CN"
        - "GB"

pipelines:
  - name: distribute_to_edge
    steps:
      - name: create_release_bundle
        type: Bash
        configuration:
          inputResources:
            - name: build_info
          integrations:
            - name: {{ .Values.integrations.artifactoryIntegration }}
          outputResources:
            - name: release_bundle
        execution:
          onExecute:
            - echo "create_release_bundle"
            - fileSpec='{"files":[]}'
            - aqlTemplate='{"items.find":{}}'
            - aqlTemplate="{\"items.find\":{\"@build.name\":\"$res_build_info_buildName\",\"@build.number\":\"$res_build_info_buildNumber\"}}"
            - buildInfoQuery=$(echo {} | jq --argjson json "$aqlTemplate" '.aql = $json')
            - fileSpec=$(echo $fileSpec | jq --argjson json "$buildInfoQuery" '.files += [ $json ]')
            - echo "$fileSpec"
            - echo "$fileSpec" | jq . > "$step_tmp_dir/$fileSpecFileName"
            - jf rbc --builds=$step_tmp_dir/$fileSpecFileName --signing-key=deepika-pipelines-rb deepika_demo_rb 1.0.0
      # - name: sign_release_bundle
      #   type: Bash
      #   configuration:
      #     inputResources:
      #       - name: release_bundle
      #     outputResources:
      #       - name: signed_bundle
      #   execution:
      #     onExecute:
      #       - echo "sign_release_bundle"
      # - name: distribute_to_edge
      #   type: Bash
      #   configuration:
      #     inputResources:
      #       - name: signed_bundle
      #     outputResources:
      #       - name: distribution_rules
      #   execution:
      #     onExecute:
      #       - echo "distribute_to_edge"
          
            
